From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alex Robinson <arobinson@cloudflare.com>
Date: Wed, 2 Mar 2022 15:58:04 -0600
Subject: Allow manually setting ValueDeserializer format version

For many years, V8's serialization version didn't change. In the meantime,
we accidentally stored data that was missing a version header. This patch
allows us to start using a header while still being able to correctly
interpret our existing stored data that was missing a header, using code
like:

  auto maybeHeader = deserializer.ReadHeader(isolate->GetCurrentContext());
  KJ_ASSERT(maybeHeader.IsNothing() || maybeHeader.FromJust());
  if (deserializer.GetWireFormatVersion() == 0) {
    deserializer.SetWireFormatVersion(13);
  }
  auto maybeValue = deserializer.ReadValue(isolate->GetCurrentContext());

diff --git a/include/v8-value-serializer.h b/include/v8-value-serializer.h
index 729730c608dbe4559687d5e91e15d91d2ddf3e77..439868401726a6424de76b6da1a70cd9fa017f00 100644
--- a/include/v8-value-serializer.h
+++ b/include/v8-value-serializer.h
@@ -279,6 +279,13 @@ class V8_EXPORT ValueDeserializer {
    */
   uint32_t GetWireFormatVersion() const;
 
+  /**
+   * Sets the underlying wire format version. Should only be used if there's no
+   * header specifying the wire format version but you're confident you know
+   * what version was used to serialize the data.
+   */
+  void SetWireFormatVersion(uint32_t version);
+
   /**
    * Reads raw data in various common formats to the buffer.
    * Note that integer types are read in base-128 varint format, not with a
diff --git a/src/api/api.cc b/src/api/api.cc
index b425d61ce31d54d291d04f40f59e4ff9ce95588e..2993e69558c48e6ea0d87a6f7c1f392a822df6e2 100644
--- a/src/api/api.cc
+++ b/src/api/api.cc
@@ -3698,6 +3698,10 @@ uint32_t ValueDeserializer::GetWireFormatVersion() const {
   return private_->deserializer.GetWireFormatVersion();
 }
 
+void ValueDeserializer::SetWireFormatVersion(uint32_t version) {
+  private_->deserializer.SetWireFormatVersion(version);
+}
+
 MaybeLocal<Value> ValueDeserializer::ReadValue(Local<Context> context) {
   PREPARE_FOR_EXECUTION(context, ValueDeserializer, ReadValue, Value);
   i::MaybeHandle<i::Object> result;
diff --git a/src/objects/value-serializer.h b/src/objects/value-serializer.h
index 67a81a3b7c3b11ed6b404ebd7bf23fb4a2a40f40..bd0d77f716a8277a11b224e953c5a8cb926526c5 100644
--- a/src/objects/value-serializer.h
+++ b/src/objects/value-serializer.h
@@ -216,6 +216,13 @@ class ValueDeserializer {
    */
   uint32_t GetWireFormatVersion() const { return version_; }
 
+  /*
+   * Sets the underlying wire format version. Should only be used if there's no
+   * header specifying the wire format version but you're confident you know
+   * what version was used to serialize the data.
+   */
+  void SetWireFormatVersion(uint32_t version) { version_ = version; }
+
   /*
    * Deserializes a V8 object from the buffer.
    */
